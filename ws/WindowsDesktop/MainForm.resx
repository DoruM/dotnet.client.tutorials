<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>